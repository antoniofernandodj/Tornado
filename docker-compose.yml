version: '3.5'

services:

  nginx:
    container_name: nginx
    build:
      dockerfile: ./nginx/nginx.dockerfile
      context: .
    image: nginx
    ports:
      - 80:80
    depends_on:
      - web1
      - web2
      - web3

  web1:
    container_name: web1
    env_file:
      - "./app/.secrets.toml"
      - "./app/.secrets.env"
    build: .
    command: python main.py
    ports:
      - 8001:8001
    environment:
      PORT: 8001
    depends_on:
      - db
    volumes:
      - static_volume:/home/app/static/

  web2:
    container_name: web2
    env_file:
      - "./app/.secrets.toml"
      - "./app/.secrets.env"
    build: .
    command: python main.py
    ports:
      - 8002:8002
    environment:
      PORT: 8002
    depends_on:
      - db
    volumes:
      - static_volume:/home/app/static/

  web3:
    container_name: web3
    env_file:
      - "./app/.secrets.toml"
      - "./app/.secrets.env"
    build: .
    command: python main.py
    ports:
      - 8003:8003
    environment:
      PORT: 8003
    depends_on:
      - db
    volumes:
      - static_volume:/home/app/static/

  db:
    container_name: db
    image: postgres
    env_file: "./app/.secrets.toml"
    volumes:
       - postgres:/data/postgres
    ports:
      - 5432:5432
    restart: unless-stopped
  

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file: "./app/.secrets.toml"
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped


volumes:
    postgres:
    pgadmin:
    static_volume: