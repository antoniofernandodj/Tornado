version: '3.5'

services:

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    image: nginx
    ports:
      - 80:80
    depends_on:
      - web1
      # - web2
      # - web3
    volumes:
      - static_volume:/home/app/static/

  web1:
    container_name: web1
    build:
      context: .
      dockerfile: Dockerfile
    command: python main.py
    restart: always
    ports:
      - 8001:8001
    env_file:
      - "./app/.secrets.toml"
      - "./app/.secrets.env"
    depends_on:
      - db
    volumes:
      - static_volume:/home/app/static/

  # web2:
  #   container_name: web2
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: python main.py
  #   restart: always
  #   ports:
  #     - 8002:8002
  #   env_file:
  #     - "./app/.secrets.toml"
  #     - "./app/.secrets.env"
  #   depends_on:
  #     - db
  #     - web1
  #   volumes:
  #     - static_volume:/home/app/static/

  # web3:
  #   container_name: web3
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: python main.py
  #   restart: always
  #   ports:
  #     - 8003:8003
  #   env_file:
  #     - "./app/.secrets.toml"
  #     - "./app/.secrets.env"
  #   depends_on:
  #     - db
  #     - web2
  #   volumes:
  #     - static_volume:/home/app/static/

  db:
    container_name: db
    image: postgres
    env_file: "./app/.secrets.toml"
    volumes:
       - postgres:/data/postgres
    ports:
      - 5432:5432
    restart: unless-stopped
  

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file: "./app/.secrets.toml"
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped


volumes:
    postgres:
    pgadmin:
    static_volume: